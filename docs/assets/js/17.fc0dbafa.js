(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{279:function(t,e,r){"use strict";r.r(e);var a=r(38),n=Object(a.a)({},function(){var t=this,e=t.$createElement,r=t._self._c||e;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("p",[t._v("历经一个多月调研，以及半个月的开发，我们终于在快陪练的学生端中集成了flutter，重构了订单列表和详情页，在此分享一下实战的过程。")]),t._v(" "),r("h2",{attrs:{id:"调研阶段"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#调研阶段","aria-hidden":"true"}},[t._v("#")]),t._v(" 调研阶段")]),t._v(" "),r("p",[t._v("团队中有几个人之前都做过react native 开发，只有一个人曾在商业APP中的ios端集成过flutter，而笔者一直都很感兴趣，但也只是搭建过环境，跑跑一些开源的flutter项目，因此在决定使用flutter之前，还是认真地从官网、各公司的实战的分享等去调研了一下。")]),t._v(" "),r("h3",{attrs:{id:"flutter-简介"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#flutter-简介","aria-hidden":"true"}},[t._v("#")]),t._v(" flutter 简介")]),t._v(" "),r("p",[t._v("Flutter是Google开发并于2017年5月开源的一套全新的跨平台、开源UI框架，可以快速在iOS和Android上构建高质量的原生用户界面，并且是未来新操作系统Fuchsia的默认开发套件。")]),t._v(" "),r("p",[t._v("与React Native 或weex 等支持多端开发APP的思路不同，Flutter则开辟了一种全新的思路，从头到尾重写一套跨平台的UI框架，包括UI控件、渲染逻辑甚至开发语言。")]),t._v(" "),r("p",[t._v("渲染引擎依靠跨平台的Skia图形库来实现，依赖系统的只有图形绘制相关的接口，可以在最大程度上保证不同平台、不同设备的体验一致性。")]),t._v(" "),r("p",[t._v("逻辑处理使用支持AOT的Dart语言，并专门为客户端优化，执行效率也比JavaScript高得多。")]),t._v(" "),r("h3",{attrs:{id:"flutter-架构"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#flutter-架构","aria-hidden":"true"}},[t._v("#")]),t._v(" flutter 架构")]),t._v(" "),r("p",[t._v("从Flutter官方提供的架构图我们可以看到，Flutter由框架和引擎两大部分组成："),r("img",{attrs:{src:"https://upload-images.jianshu.io/upload_images/11988064-ac8f7287bdbf5b33.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240",alt:"Flutter架构图.png"}})]),t._v(" "),r("p",[t._v("其中，框架部分完全使用Dart语言实现，它实现了一套基础库，并且有着清晰的分层架构，自上而下我们简单介绍一下：")]),t._v(" "),r("ul",[r("li",[t._v("Material 和Cupertino 层是Flutter在基础组件库之上提供的两种视觉风格的组件库；")]),t._v(" "),r("li",[t._v("Widgets层是Flutter提供的的一套基础组件库；")]),t._v(" "),r("li",[t._v("Rendering层是依赖于dart UI层的一个抽象布局层，用于构建UI树，且能通过计算UI树变化的部分，来更新UI树，最终将UI树绘制到屏幕上，这是框架最核心的部分；")]),t._v(" "),r("li",[t._v("Animation、Painting、Gestures 层是Flutter引擎暴露的底层UI库，对应的是Flutter中的dart:ui包，提供动画、手势及绘制能力；")]),t._v(" "),r("li",[t._v("Foundation层定义的大都是非常基础的、提供给其他所有层使用的工具类和方法。")])]),t._v(" "),r("p",[t._v("而Flutter引擎部分则是纯 C++实现的 SDK，包括了 Skia引擎、Dart运行时、文字排版引擎等。")]),t._v(" "),r("h3",{attrs:{id:"flutter学习资料"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#flutter学习资料","aria-hidden":"true"}},[t._v("#")]),t._v(" flutter学习资料")]),t._v(" "),r("p",[t._v("调研并落地一门新技术，资料是关键，这里列举一些我们觉得很有用的一些资料：")]),t._v(" "),r("ul",[r("li",[t._v("英文官网："),r("a",{attrs:{href:"http://flutter.io/",target:"_blank",rel:"noopener noreferrer"}},[t._v("http://flutter.io/"),r("OutboundLink")],1)]),t._v(" "),r("li",[t._v("中文文档："),r("a",{attrs:{href:"https://flutterchina.club/docs/",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://flutterchina.club/docs/"),r("OutboundLink")],1)]),t._v(" "),r("li",[t._v("来自滴滴架构师wendux的入门书籍flutter实战"),r("a",{attrs:{href:"https://book.flutterchina.club/",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://book.flutterchina.club/"),r("OutboundLink")],1)]),t._v(" "),r("li",[t._v("国内最早落地flutter的闲鱼团队掘金系列分享："),r("a",{attrs:{href:"https://juejin.im/user/5ac2db47f265da2393774122",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://juejin.im/user/5ac2db47f265da2393774122"),r("OutboundLink")],1)])]),t._v(" "),r("h3",{attrs:{id:"flutter-的使用情况"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#flutter-的使用情况","aria-hidden":"true"}},[t._v("#")]),t._v(" flutter 的使用情况")]),t._v(" "),r("h4",{attrs:{id:"国内情况"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#国内情况","aria-hidden":"true"}},[t._v("#")]),t._v(" 国内情况")]),t._v(" "),r("p",[t._v("国内阿里的闲鱼团队于2018年就广泛使用flutter了，并且和Google团队进行了紧密地合作，阿里体系内也有多个商业APP使用了flutter。")]),t._v(" "),r("p",[t._v("而腾讯中手机QQ 则开源基于Flutter 的动态化框架MXFlutter ，腾讯翻译君Android客户端也集成Flutter，可以看到腾讯系的也有不同团队试水了flutter。")]),t._v(" "),r("p",[t._v("而其他知名互联网公司美团和滴滴等也能从网上搜到他们的实战分享，小公司也有不少进行了尝试。")]),t._v(" "),r("p",[t._v("可以看到，因为谷歌的大力推广，flutter成了各APP开发不得不考虑的技术解决方案！")]),t._v(" "),r("h4",{attrs:{id:"国外情况"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#国外情况","aria-hidden":"true"}},[t._v("#")]),t._v(" 国外情况")]),t._v(" "),r("p",[t._v("不仅国内很多公司在尝试使用flutter开发原生APP，国外的主流公司也在主流产品上集成了flutter模块，很多创业公司都将flutter作为开发原生app的首选。")]),t._v(" "),r("h2",{attrs:{id:"flutter-混合开发实战"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#flutter-混合开发实战","aria-hidden":"true"}},[t._v("#")]),t._v(" flutter 混合开发实战")]),t._v(" "),r("p",[t._v("经过半个月的努力，我们成功在快陪练学生端的2.4.0版本，集成了flutter模块的功能，实现了订单列表和详情等页面的flutter化。")]),t._v(" "),r("h3",{attrs:{id:"flutter-模块开发"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#flutter-模块开发","aria-hidden":"true"}},[t._v("#")]),t._v(" flutter 模块开发")]),t._v(" "),r("ol",[r("li",[r("a",{attrs:{href:"https://flutterchina.club/setup-macos/",target:"_blank",rel:"noopener noreferrer"}},[t._v("首先配置环境"),r("OutboundLink")],1)]),t._v(" "),r("li",[t._v("执行"),r("code",[t._v("flutter create -t module my_flutter")]),t._v("，创建flutter模块")]),t._v(" "),r("li",[t._v("flutter模块开发按照正常flutter项目开发既可，入口文件需要单独配置")])]),t._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[t._v("void main() async {\n  // 为了单独开发，我们通过判断defaultRouteName来配置是否为flutter环境启动还是原生混合方式启动，来选择初始化一起配置信息\n  if (window.defaultRouteName != '/') {\n    Application()..initChannel();\n    await Application().getLocalInfo();\n  } else {\n    Application()..isInApp = true;\n  }\n  runApp(KPLApp(window.defaultRouteName));\n}\n")])])]),r("ol",{attrs:{start:"4"}},[r("li",[t._v("通过defaultRouteName可以配置初始化的页面")])]),t._v(" "),r("h3",{attrs:{id:"flutter-集成到ios"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#flutter-集成到ios","aria-hidden":"true"}},[t._v("#")]),t._v(" flutter 集成到ios")]),t._v(" "),r("p",[t._v("flutter 刚发布的时候集成比较麻烦有两种集成方式，现在已经比较方便主要都用pod集成可以减少耦合")]),t._v(" "),r("ol",[r("li",[t._v("配置Podfile(需要安装pod, 但是应该大部分项目都已经安装过了)")])]),t._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[t._v("flutter_application_path = \"xxx/xxx/my_flutter\"  // 根据自己的项目上层级配置\neval(File.read(File.join(flutter_application_path, '.ios', 'Flutter', 'podhelper.rb')), binding)\n")])])]),r("ol",{attrs:{start:"2"}},[r("li",[t._v("打开Xcode工程，选择要加入 Flutter App 的 target，选择 Build Phases，点击顶部的 + 号，选择 New Run Script Phase，然后输入以下脚本")])]),t._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[t._v('"$FLUTTER_ROOT/packages/flutter_tools/bin/xcode_backend.sh" build\n"$FLUTTER_ROOT/packages/flutter_tools/bin/xcode_backend.sh" embed\n')])])]),r("ol",{attrs:{start:"3"}},[r("li",[t._v("执行"),r("code",[t._v("pod install")])])]),t._v(" "),r("blockquote",[r("p",[t._v("ps: 这样其实已经可以了后续介绍的是与flutter 交互相关，但是这里还有别的问题,"),r("code",[t._v("相关可以参考")]),r("a",{attrs:{href:"https://juejin.im/post/5c3ae5ef518825242165c5ca",target:"_blank",rel:"noopener noreferrer"}},[t._v("iOS混合项目优化"),r("OutboundLink")],1)])]),t._v(" "),r("pre",[r("code",[t._v("  1. 团队开发时无法保证flutter sdk统一只能规范约定，不能从代码层面约束\n  2. 对Native工程无侵入, native打包必须配置flutter环境，并且无法自动同助依赖\n  3. 影响Native工程的开发流程与打包流程\n  4. 不容易本地调试\n")])]),t._v(" "),r("h4",{attrs:{id:"flutter-集成到ios-2"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#flutter-集成到ios-2","aria-hidden":"true"}},[t._v("#")]),t._v(" flutter 集成到ios")]),t._v(" "),r("p",[t._v("大部分情况可以用flutter提供的methodchannel和eventchannel就可以实现，如果有特定需求可以自己实现basechannel")]),t._v(" "),r("blockquote",[r("p",[t._v("FlutterMethodChannel flutter主动调iOS代码")])]),t._v(" "),r("pre",[r("code",[t._v("*flutter代码*\nstatic const _methodChannel = const MethodChannel('kpl-method-scheme');\n\nvoid goBack2Native() async {\n  await _methodChannel.invokeMethod('goBack');\n}\n*iOS代码*\n\nFlutterMethodChannel *messageChannel = [FlutterMethodChannel methodChannelWithName:methodChannelName binaryMessenger:vc];\n\n[messageChannel setMethodCallHandler:^(FlutterMethodCall * _Nonnull call, FlutterResult  _Nonnull result) {\n    // call.method 获取 flutter 给回到的方法名，要匹配到 channelName 对应的多个 发送方法名，一般需要判断区分\n    // call.arguments 获取到 flutter 给到的参数，（比如跳转到另一个页面所需要参数）\n    // result 是给flutter的回调， 该回调只能使用一次\n    NSLog(@\"method=%@ \\narguments = %@\", call.method, call.arguments);\n    \n    // method和WKWebView里面JS交互很像\n    // flutter点击事件执行后在iOS跳转TargetViewController\n    // flutter传参给iOS\n    if ([call.method isEqualToString:@\"goBack\"]) {\n        [vc.navigationController popViewControllerAnimated:YES];\n    }\n}];\n")])]),t._v(" "),r("blockquote",[r("p",[t._v("FlutterEventChannel iOS主动调Futter代码")])]),t._v(" "),r("pre",[r("code",[t._v('*flutter代码*\nstatic const _eventChannel = const EventChannel(\'kpl-event-scheme\');\n\nvoid initChannel() {\n  _eventChannel.receiveBroadcastStream(\'init\').listen(_onEvent, onError: _onError);\n}\n// 回调事件\nvoid _onEvent(Object event) {}\n// 错误返回\nvoid _onError(Object error) {}\n\n*iOS代码*\n\nFlutterEventChannel *evenChannal = [FlutterEventChannel eventChannelWithName:eventChannelName binaryMessenger:vc];\n// 代理FlutterStreamHandler\n[evenChannal setStreamHandler:self];\n// 遵守`FlutterStreamHandler`协议\n// 这个onListen是Flutter端开始监听这个channel时的回调，第二个参数 EventSink是用来传数据的载体。\n- (FlutterError* _Nullable)onListenWithArguments:(id _Nullable)arguments\n                                      eventSink:(FlutterEventSink)events {\n    // arguments flutter给native的参数\n    // 回调给flutter， 建议使用实例指向，因为该block可以使用多次\n    if (events) {\n        NSLog(@"#########: %@", arguments);\n        self.events = events;\n        // events(@"主动传的数据");\n    }\n    return nil;\n}\n\n/// flutter不再接收\n- (FlutterError* _Nullable)onCancelWithArguments:(id _Nullable)arguments {\n    // arguments flutter给native的参数\n    NSLog(@"%@", arguments);\n    self.events = nil;\n    return nil;\n}\n')])]),t._v(" "),r("h3",{attrs:{id:"flutter-集成到android"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#flutter-集成到android","aria-hidden":"true"}},[t._v("#")]),t._v(" flutter 集成到android")]),t._v(" "),r("p",[r("code",[t._v("相关可以参考")]),r("a",{attrs:{href:"https://guoshuyu.cn/home/wx/Flutter-14.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Flutter 集成到现有 Android 项目"),r("OutboundLink")],1)]),t._v(" "),r("h2",{attrs:{id:"纯flutter开发实战"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#纯flutter开发实战","aria-hidden":"true"}},[t._v("#")]),t._v(" 纯flutter开发实战")]),t._v(" "),r("p",[t._v("由于运营的需要，我们需要把一个h5的应用，做成IOS，因为后端接口都是我们前端团队用nodejs写的，且原生团队人力不足，有了前面集成flutter的经验，我们决定使用flutter开发这个纯资讯的APP，目前已经提审。")]),t._v(" "),r("h3",{attrs:{id:"目录结构"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#目录结构","aria-hidden":"true"}},[t._v("#")]),t._v(" 目录结构")]),t._v(" "),r("pre",[r("code",[t._v("├── api\n│   ├── api.dart\n│   └── new_utils.dart\n├── components\n├── config\n│   ├── application.dart\n│   └── bus_event.dart\n├── main.dart\n├── models\n│   ├── base_response_model.dart\n│   ├── base_response_model.g.dart\n├── page\n│   └── RootPage.dart\n├── routers\n│   └── router.dart\n├── styles\n│   ├── gaps.dart\n│   ├── kplcolor.dart\n│   ├── resources.dart\n│   └── textstyles.dart\n└── tool\n    ├── common_refresh.dart\n    ├── date_util.dart\n    ├── preferences.dart\n    └── toast.dart\n")])]),t._v(" "),r("h2",{attrs:{id:"总结"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#总结","aria-hidden":"true"}},[t._v("#")]),t._v(" 总结")])])},[],!1,null,null,null);e.default=n.exports}}]);