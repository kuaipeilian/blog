(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{287:function(a,t,r){"use strict";r.r(t);var e=r(38),v=Object(e.a)({},function(){var a=this,t=a.$createElement,r=a._self._c||t;return r("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[r("h1",{attrs:{id:"js基础知识"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#js基础知识","aria-hidden":"true"}},[a._v("#")]),a._v(" js基础知识")]),a._v(" "),r("p",[a._v("本章将从最简单的讲起，循序渐进、由浅入深，力求清晰易懂地全面介绍 JS基础特性和语法。")]),a._v(" "),r("h2",{attrs:{id:"关于js"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#关于js","aria-hidden":"true"}},[a._v("#")]),a._v(" 关于js")]),a._v(" "),r("p",[a._v("JavaScript 是互联网上最流行的脚本语言，这门语言可用于 HTML 和 web，更可广泛用于服务器、PC、笔记本电脑、平板电脑和智能手机等设备。")]),a._v(" "),r("p",[a._v("JavaScript 本身只能用来做一些数学和逻辑运算，不提供任何与 I/O（输入/输出）相关的 API，都要靠宿主环境（host）提供，所以它只合适嵌入到更大型的应用程序环境，去调用宿主环境提供的底层 API。")]),a._v(" "),r("h2",{attrs:{id:"js的宿主环境"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#js的宿主环境","aria-hidden":"true"}},[a._v("#")]),a._v(" JS的宿主环境")]),a._v(" "),r("p",[a._v("目前，已经嵌入 JavaScript 的宿主环境有多种，最常见的环境就是浏览器，另外还有服务器环境，也就是 Node 项目。")]),a._v(" "),r("p",[a._v("JavaScript 的核心语法部分相当精简，只包括两个部分：基本的语法构造（比如操作符、控制结构、语句）和标准库（一系列具有各种功能的对象比如Array、Date、Math等）。")]),a._v(" "),r("p",[a._v("除此之外，各种宿主环境提供额外的 API（即只能在该环境使用的接口），以便 JavaScript 调用。以浏览器为例，它提供的额外 API 可以分成三大类。")]),a._v(" "),r("ul",[r("li",[a._v("浏览器控制类：操作浏览器")]),a._v(" "),r("li",[a._v("DOM 类：操作网页的各种元素")]),a._v(" "),r("li",[a._v("Web 类：实现互联网的各种功能")])]),a._v(" "),r("p",[a._v("如果宿主环境是服务器，则会提供各种操作系统的 API，比如文件操作 API、网络通信 API等等。这些你都可以在 Node 环境中找到。")]),a._v(" "),r("h2",{attrs:{id:"js的使用领域"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#js的使用领域","aria-hidden":"true"}},[a._v("#")]),a._v(" JS的使用领域")]),a._v(" "),r("p",[a._v("JavaScript 的发明目的，就是作为浏览器的内置脚本语言，为网页开发者提供操控浏览器的能力。它是目前唯一一种通用的浏览器脚本语言，所有浏览器都支持。")]),a._v(" "),r("p",[a._v("近年来，JavaScript 的使用范围，慢慢超越了浏览器，正在向通用的系统语言发展。")]),a._v(" "),r("ul",[r("li",[a._v("浏览器的平台化： 随着 HTML5 的出现，浏览器本身的功能越来越强，不再仅仅能浏览网页，而是越来越像一个平台，JavaScript 因此得以调用许多系统功能；")]),a._v(" "),r("li",[a._v("Node 项目：用于开发服务器端的大型项目，网站的前后端都用 JavaScript 开发已经成为了现实；")]),a._v(" "),r("li",[a._v("移动平台开发：Facebook 公司的 React Native 项目以及基于vue的weex让JS成为越来越多手机应用的开发语言;")]),a._v(" "),r("li",[a._v("跨平台的桌面应用程序：Mozilla 的 Open Web Apps 项目、Google 的 Chrome App 项目、GitHub 的 Electron 项目、以及 TideSDK 项目，都可以用来编写运行于 Windows、Mac OS 和 Android 等多个桌面平台的程序，不依赖浏览器。")])]),a._v(" "),r("h2",{attrs:{id:"基本语法"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#基本语法","aria-hidden":"true"}},[a._v("#")]),a._v(" 基本语法")]),a._v(" "),r("h3",{attrs:{id:"语句"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#语句","aria-hidden":"true"}},[a._v("#")]),a._v(" 语句")]),a._v(" "),r("p",[a._v("JavaScript 程序的执行单位为行，每一行就是一个语句(为了完成某种任务而进行的操作)，如：")]),a._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[a._v("var a = 1 + 3;\n")])])]),r("p",[a._v("这条语句先用var命令，声明了变量a，然后将1 + 3的运算结果赋值给变量a。")]),a._v(" "),r("p",[a._v("1 + 3叫做表达式（expression），指一个为了得到返回值的计算式。语句和表达式的区别在于，前者主要为了进行某种操作，一般情况下不需要返回值；后者则是为了得到返回值，一定会返回一个值。")]),a._v(" "),r("p",[a._v("语句以分号结尾，一个分号就表示一个语句结束。多个语句可以写在一行内。")]),a._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[a._v("var a = 1 + 3 ; var b = 'abc';\n")])])]),r("h3",{attrs:{id:"变量"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#变量","aria-hidden":"true"}},[a._v("#")]),a._v(" 变量")]),a._v(" "),r("p",[a._v("变量就是为“值”起名，然后引用这个名字，就等同于引用这个值。变量的名字就是变量名。")]),a._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[a._v("var a = 1;\n")])])]),r("p",[a._v("上面的代码先声明变量a，然后在变量a与数值1之间建立引用关系，称为将数值1“赋值”给变量a。以后，引用变量名a就会得到数值1。最前面的var，是变量声明命令。它表示通知解释引擎，要创建一个变量a。")])])},[],!1,null,null,null);t.default=v.exports}}]);